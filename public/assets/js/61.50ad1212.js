(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{626:function(t,e,a){"use strict";a.r(e);var s=a(13),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"jedis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis"}},[t._v("#")]),t._v(" Jedis")]),t._v(" "),a("p",[t._v("本篇对jedis 即用java操作redis的常用方法用法整理")]),t._v(" "),a("p",[t._v("redis是一种高级的key-value的存储系统")]),t._v(" "),a("p",[t._v("其中的key是字符串类型，尽可能满足如下几点：")]),t._v(" "),a("p",[t._v("1）key不要太长，最好不要操作1024个字节，这不仅会消耗内存还会降低查找 效率\n2）key不要太短，如果太短会降低key的可读性\n3）在项目中，key最好有一个统一的命名规范（根据企业的需求）")]),t._v(" "),a("p",[t._v("其中value 支持五种数据类型：")]),t._v(" "),a("p",[t._v("1）字符串型 string\n2）字符串列表 lists\n3）字符串集合 sets\n4）有序字符串集合 sorted sets\n5）哈希类型 hashs")]),t._v(" "),a("blockquote",[a("p",[t._v("jedis 就是 java redis 的简写")])]),t._v(" "),a("h3",{attrs:{id:"jedis语法总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis语法总结"}},[t._v("#")]),t._v(" jedis语法总结")]),t._v(" "),a("div",{staticClass:"language-cobol line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cobol"}},[a("code",[t._v("Jedis jedis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" ip "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"_1-jedis中对键通用的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-jedis中对键通用的操作"}},[t._v("#")]),t._v(" 1. jedis中对键通用的操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("返回值 /补充说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.flushAll()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("清空所有数据库的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.flushDB()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("清空当前数据库的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("boolean jedis.exists(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断某个键是否存在")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true = 存在，false= 不存在")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.set(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("新增键值对（key,value）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("返回String类型的OK代表成功")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Set"),a("String",[t._v(" jedis.keys(*)")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取所有key")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("返回set 无序集合")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.del(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除键为key的数据项")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.expire(String key,int i)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("设置键为key的过期时间为i秒")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("int jedis.ttl(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取键为key数据项的剩余时间（秒）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.persist(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("移除键为key属性项的生存时间限制")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.type(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查看键为key所对应value的数据类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("h4",{attrs:{id:"_2-jedis中-字符串的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-jedis中-字符串的操作"}},[t._v("#")]),t._v(" 2. jedis中 字符串的操作")]),t._v(" "),a("p",[t._v("字符串类型是Redis中最为基础的数据存储类型，它在Redis中是二进制安全的，这 便意味着该类型可以接受任何格式的数据，如JPEG图像数据或Json对象描述信息等。 在Redis中字符串类型的Value最多可以容纳的数据长度是512M。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.set(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("增加（或覆盖）数据项")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.setnx(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不覆盖增加数据项（重复的不插入）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.setex(String ,int t,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("增加数据项并设置有效时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.del(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除键为key的数据项")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.get(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取键为key对应的value")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.append(String key, String s)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("在key对应value 后边扩展字符串 s")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.mset(String k1,String V1,String K2,String V2,…)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("增加多个键值对")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("String[] jedis.mget(String K1,String K2,…)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取多个key对应的value")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("jedis.del(new String[](String K1,String K2,.... ))")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除多个key对应的数据项")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("String jedis.getSet(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取key对应value并更新value")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("String jedis.getrang(String key , int i, int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取key对应value第i到j字符 ，从0开始，包头包尾")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-jedis中对整数和浮点数操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-jedis中对整数和浮点数操作"}},[t._v("#")]),t._v(" 3.jedis中对整数和"),a("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E6%B5%AE%E7%82%B9%E6%95%B0&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[t._v("浮点数"),a("OutboundLink")],1),t._v("操作")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.incr(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将key对应的value 加1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.incrBy(String key,int n)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将key对应的value 加 n")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.decr(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将key对应的value 减1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.decrBy(String key , int n)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将key对应的value 减 n")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-jedis中对列表-list-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-jedis中对列表-list-操作"}},[t._v("#")]),t._v(" 4. jedis中对列表（list）操作")]),t._v(" "),a("p",[t._v("在Redis中，List类型是按照插入顺序排序的字符串链表。和数据结构中的普通链表 一样，我们可以在其头部(left)和尾部(right)添加新的元素。在插入时，如果该键并不存在，Redis将为该键创建一个新的链表。如果链表中所有的元素均被移除，那么该键也将会被从数据库中删除。List中可以包含的最大元素数量是 4294967295。\n从元素插入和删除的效率视角来看，如果我们是在链表的两头插入或删除元素，这将 会是非常高效的操作，即使链表中已经存储了百万条记录，该操作也可以在常量时间内完成。然而需要说明的是，如果元素插入或删除操作是作用于链表中间，那将会是非常低效的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202304171632903.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("blockquote",[a("p",[t._v("list 元素的下表从0开始")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("jedis.lpush(String key, String v1, String v2,....)")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个List , 注意：如果已经有该List对应的key, 则按顺序在左边追加 一个或多个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.rpush(String key , String vn)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("key对应list右边插入元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.lrange(String key,int i,int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取key对应list区间[i,j]的元素，注：从左边0开始，包头包尾")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.lrem(String key,int n , String val)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除list中 n个元素val")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.ltrim(String key,int i,int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除list区间[i,j] 之外的元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.lpop(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("key对应list ,左弹出栈一个元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.rpop(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("key对应list ,右弹出栈一个元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.lset(String key,int index,String val)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("修改key对应的list指定下标index的元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.llen(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取key对应list的长度")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.lindex(String key,int index)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取key对应list下标为index的元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sort(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("把key对应list里边的元素从小到大排序 （后边详细介绍）")])])])]),t._v(" "),a("h4",{attrs:{id:"_5-jedis-集合set-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-jedis-集合set-操作"}},[t._v("#")]),t._v(" 5. jedis 集合set 操作")]),t._v(" "),a("p",[t._v("在Redis中，我们可以将Set类型看作为"),a("strong",[t._v("没有排序的字符集合")]),t._v("，和List类型一样，也可以在该类型的数据值上执行添加、删除或判断某一元素是否存在等操作。需要 说明的是，这些操作的时间是常量时间。Set可包含的最大元素数是4294967295。\n和List类型不同的是，"),a("strong",[t._v("Set集合中不允许出现重复的元素")]),t._v("。和List类型相比，Set类型在功能上还存在着一个非常重要的特性，即在服务器端完成多个Sets之间的聚合计 算操作，如unions、intersections和differences（就是交集并集那些了）。由于这些操作均在服务端完成， 因此效率极高，而且也节省了大量的网络IO开销")]),t._v(" "),a("blockquote",[a("p",[t._v("set 的方法都以s开头")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("操作")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sadd(String key,String v1,String v2,…)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个set")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.smenbers(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取key对应set的所有元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.srem(String key,String val)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除集合key中值为val的元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.srem(String key, Sting v1, String v2,…)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除值为v1, v2 , …的元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.spop(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("随机弹出栈set里的一个元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.scared(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取set元素个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.smove(String key1, String key2, String val)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将元素val从集合key1中移到key2中")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sinter(String key1, String key2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合key1和集合key2的交集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sunion(String key1, String key2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合key1和集合key2的并集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sdiff(String key1, String key2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取集合key1和集合key2的差集")])])])]),t._v(" "),a("h4",{attrs:{id:"_6-jedis中有序集合zsort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-jedis中有序集合zsort"}},[t._v("#")]),t._v(" 6.jedis中有序集合Zsort")]),t._v(" "),a("p",[t._v("Sorted-Sets和Sets类型极为相似，它们都是字符串的集合，都"),a("strong",[t._v("不允许重复的成员出现在一个Set中")]),t._v("。它们之间的"),a("strong",[t._v("主要差别是Sorted-Sets中的每一个成员都会有一个分数(score)与之关联")]),t._v("，Redis正是通过分数来为集合中的成员进行从小到大的排序。然 而需要额外指出的是，尽管Sorted-Sets中的成员必须是唯一的，但是分数(score) 却是可以重复的。\n在Sorted-Set中添加、删除或更新一个成员都是非常快速的操作，其时间复杂度为集合中成员数量的对数。由于Sorted-Sets中的成员在集合中的位置是有序的，因此，即便是访问位于集合中部的成员也仍然是非常高效的。事实上，Redis所具有的这一特征在很多其它类型的数据库中是很难实现的，换句话说，在该点上要想达到和Redis同样的高效，在其它数据库中进行建模是非常困难的。\n例如：游戏排名、微博热点话题等使用场景。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zadd(String key,Map map)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个ZSet")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hset(String key,int score , int val)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("往 ZSet插入一个元素（Score-Val）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zrange(String key, int i , int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet 里下表[i,j] 区间元素Val")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis. zrangeWithScore(String key,int i , int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet 里下表[i,j] 区间元素Score - Val")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zrangeByScore(String , int i , int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet里score[i,j]分数区间的元素（Score-Val）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jeids.zscore(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet里value元素的Score")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zrank(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet里value元素的score的排名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zrem(String key,String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除ZSet里的value元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zcard(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet的元素个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zcount(String key , int i ,int j)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取ZSet总score在[i,j]区间的元素个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.zincrby(String key,int n , String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("把ZSet中value元素的score+=n")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-jedis中-哈希-hash-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-jedis中-哈希-hash-操作"}},[t._v("#")]),t._v(" 7. jedis中 哈希（"),a("a",{attrs:{href:"https://so.csdn.net/so/search?q=Hash&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hash"),a("OutboundLink")],1),t._v("）操作")]),t._v(" "),a("p",[t._v("Redis中的Hashes类型可以看成具有String Key和String Value的map容器。所以该类型非常适合于存储值对象的信息。如Username、Password和Age等。如果Hash中包含很少的字段，那么该类型的数据也将仅占用很少的磁盘空间。每一个Hash可以存储4294967295个键值对。\n"),a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202304171632074.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("blockquote",[a("p",[t._v("规律： 哈希的 方法 都以 h 开头，含有m字符的一般是多个的， （multiple： 多个的）")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hmset(String key,Map map)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("添加一个Hash")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hset(String key , String key, String value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("向Hash中插入一个元素（K-V）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hgetAll(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取Hash的所有（K-V） 元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hkeys（String key）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取Hash所有元素的key")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hvals(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取Hash所有元素 的value")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hincrBy(String key , String k, int i)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("把Hash中对应的k元素的值 val+=i")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hdecrBy(String key,String k, int i)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("把Hash中对应的k元素的值 val-=i")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hdel(String key , String k1, String k2,…)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从Hash中删除一个或多个元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hlen(String key)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取Hash中元素的个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hexists(String key,String K1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断Hash中是否存在K1对应的元素")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.hmget(String key,String K1,String K2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("获取Hash中一个或多个元素value")])])])]),t._v(" "),a("h4",{attrs:{id:"_8-排序操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-排序操作"}},[t._v("#")]),t._v(" 8. 排序操作")]),t._v(" "),a("p",[t._v("使用排序， 首先需要生成一个排序对象")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SortingParams")]),t._v(" sortingParams "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SortingParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("语法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sort(String key,sortingParams.alpha())")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("队列按首字母a-z 排序")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sort(String key, sortingParams.asc() )")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("队列按数字升序排列")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("jedis.sort(String key , sortingParams.desc())")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("队列按数字降序排列")])])])]),t._v(" "),a("p",[t._v("使用示例：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jedis")]),t._v(" jedis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JedisPoolUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getJedis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SortingParams")]),t._v(" sortingParams "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SortingParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" sort "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list02"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sortingParams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("blockquote",[a("p",[t._v("这里排序指的是返回的sort是有序的，而之前的list02 依然是以前的顺序。")])])])}),[],!1,null,null,null);e.default=i.exports}}]);